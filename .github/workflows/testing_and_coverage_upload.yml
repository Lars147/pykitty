name: Deploy Function

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
    testing_and_coverage_upload:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Set up Python 3.8
              uses: actions/setup-python@v5
              with:
                python-version: 3.8
            - name: Install Poetry Action
              uses: snok/install-poetry@v1.3.4
            #----------------------------------------------
            #       load cached venv if cache exists
            #----------------------------------------------
            - name: Load cached venv
              id: cached-poetry-dependencies
              uses: actions/cache@v3
              with:
                path: .venv
                key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
            #----------------------------------------------
            # install dependencies if cache does not exist
            #----------------------------------------------
            - name: Install dependencies
              if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
              run: poetry install --no-interaction --no-root
            #----------------------------------------------
            # install your root project, if required
            #----------------------------------------------
            - name: Install project
              run: poetry install --no-interaction
            #----------------------------------------------
            #              run test suite
            #----------------------------------------------
            - name: Run tests
              env:
                E2E_KITTY_URL: ${{ vars.E2E_KITTY_URL }}
                E2E_KITTY_USERNAME: ${{ vars.E2E_KITTY_USERNAME }}
              run: |
                poetry run coverage run -m unittest discover tests
                poetry run coverage report -m
                poetry run coverage xml
            #----------------------------------------------
            #              upload coverage report
            #----------------------------------------------
            - name: Upload coverage reports to Codecov
              uses: codecov/codecov-action@v5.3.1
              env:
                CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
